const Discord = require('discord.js');

exports.run = async (client, message, args, level) => {
  try {
    const user = message.mentions.users.first();
    const settings = client.getSettings(message.guild.id);

    if (user) {
      const member = message.guild.member(user);
      if (member) {
        if (!message.guild.roles.find(r => r.name == settings.muteRole)) {
          message.guild.createRole({
            name: settings.muteRole || 'InfestedMute',
            color: '#eeeeee',
            permissions: ['READ_MESSAGES']
          }).catch();
        }
        
        
        member.addRole(message.guild.roles.find(r => r.name == settings.muteRole)).then(async () => {
          message.channel.send(`ðŸ¤« This person is succesfull muted  **${user.tag}** ðŸ¤«`);

          const modLogChannel = settings.modLogChannel;
          if (modLogChannel && message.guild.channels.find(c => c.name === settings.modLogChannel)) {
            let embed = new Discord.RichEmbed()
            .setTitle('User Mute')
            .setColor('#eeeeee')
            .setDescription(`**Name**: ${user.username}\n**ID**: ${user.id}\n**Staff**: ${message.author.username}`);

            message.guild.channels.find(c => c.name === settings.modLogChannel).send(embed).catch(console.error);
          }
        }).catch(err => {
          message.channel.send('<:infested:740956301747683440> Hay, i cant mute that person! .\n' + err);
        });
      } else {
        message.channel.send('<:infested:740956301747683440> That user isn\'t in this server!');
      }
    } else {
      message.channel.send('<:infested:740956301747683440> Hay, you didn`t mention the user to mute!');
    }
  } catch (err) {
    message.channel.send('There was an error!\n' + err.stack).catch();
  }
};

exports.conf = {
  enabled: true,
  aliases: ['m'],
  guildOnly: true,
  permLevel: 'Moderator'
};

exports.help = {
  name: 'mute',
  category: 'Moderation',
  description: 'Mutes the specified user.',
  usage: 'mute @<user>'
};
